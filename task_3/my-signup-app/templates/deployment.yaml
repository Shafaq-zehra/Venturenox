---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        ports:
        - containerPort: 4000
        env:
        - name: GUARD_PORT
          value: "4000"
        - name: POSTGRES_USERNAME
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.password }}
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_DATABASE
          value: {{ .Values.postgres.database }}
        command: ["yarn", "start"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - name: adminer
        image: {{ .Values.adminer.image }}
        ports:
        - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pgdata
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: {{ .Values.web.image }}
        ports:
        - containerPort: 80
